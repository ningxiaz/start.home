/// core.styl --- The core library to deal with characters stuff
//
// Copyright (c) 2012 Quildreen "Sorella" Motta (http://killdream.github.com)
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/// Dependencies ///////////////////////////////////////////////////////
@import "characters"


/// Core implementation ////////////////////////////////////////////////

//// Function entypo-hash-get //////////////////////////////////////////
//
// Returns the value for the given key in the hash.
//
// entypo-hash-get :: { a -> b }, a -> b
entypo-hash-get(hash, key)
  return pair[1] if pair[0] == key for pair in has


//// Function entypo-pictogram /////////////////////////////////////////
//
// Returns the unicode character for the pictogram.
//
// entypo-pictogram :: a -> b
entypo-pictogram(name)
  return entypo-hash-get(entypo-charmap, name)


//// Function entypo-social-pictogram //////////////////////////////////
//
// Returns the unicode character for the social pictogram.
//
// entypo-social-pictogram :: a -> b
entypo-social-pictogram(name)
  return entypo-hash-get(entypo-social-charmap, name)


//// Function entypo-font-source ///////////////////////////////////////
//
// Generates the proper "src" field for a font.
//
// entypo-font-source! :: String, String -> IO ()
font-source(path, name)
  path = unquote(path)
  src: url(s('%s.eot', path))
  src: url(s('%s.eot?#iefix', path)) format('embedded-opentype'), \
       url(s('%s.woff', path)) format('woff'),                    \
       url(s('%s.ttf', path)) format('truetype'),                 \
       url(s('%s.svg#%s', path, name)) format('svg')


//// Function entypo-define ////////////////////////////////////////////
//
// Defines the @font-face for an Entypo font.
//
// entypo-define! :: String, String, String -> IO ()
entypo-define(title, path, name)
  @font-face
    font-family: title
    font-weight: normal
    font-style: normal
    font-source: path, name